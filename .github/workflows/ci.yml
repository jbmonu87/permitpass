name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Detect npm lockfiles
        id: npm_lockfiles
        shell: bash
        run: |
          paths=()
          if [ -f server/package-lock.json ]; then
            paths+=('server/package-lock.json')
          fi
          if [ -f client/package-lock.json ]; then
            paths+=('client/package-lock.json')
          fi
          if [ ${#paths[@]} -eq 0 ]; then
            echo "paths=" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          {
            echo 'paths<<EOF'
            printf '%s\n' "${paths[@]}"
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Setup Node (with npm cache)
        if: ${{ steps.npm_lockfiles.outputs.paths != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ${{ steps.npm_lockfiles.outputs.paths }}

      - name: Setup Node
        if: ${{ steps.npm_lockfiles.outputs.paths == '' }}
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # ----- SERVER -----
      - name: Install server deps (ci)
        working-directory: ./server
        run: npm ci

      - name: Server typecheck
        working-directory: ./server
        run: npx tsc -p ./tsconfig.json --noEmit

      - name: Server lint (optional)
        if: hashFiles('server/package.json') != ''
        working-directory: ./server
        run: npm run lint --if-present

      # ----- CLIENT -----
      - name: Install client deps (ci)
        working-directory: ./client
        run: npm ci

      - name: Build client (if present)
        if: hashFiles('client/package.json') != ''
        working-directory: ./client
        run: npm run build --if-present
