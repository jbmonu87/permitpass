== REPO TREE (top 3 levels, excluding node_modules) ==
.
├── .git
│   ├── COMMIT_EDITMSG
│   ├── FETCH_HEAD
│   ├── HEAD
│   ├── config
│   ├── description
│   ├── hooks
│   │   ├── applypatch-msg.sample
│   │   ├── commit-msg.sample
│   │   ├── fsmonitor-watchman.sample
│   │   ├── post-checkout
│   │   ├── post-commit
│   │   ├── post-merge
│   │   ├── post-update.sample
│   │   ├── pre-applypatch.sample
│   │   ├── pre-commit.sample
│   │   ├── pre-merge-commit.sample
│   │   ├── pre-push
│   │   ├── pre-push.sample
│   │   ├── pre-rebase.sample
│   │   ├── pre-receive.sample
│   │   ├── prepare-commit-msg.sample
│   │   ├── push-to-checkout.sample
│   │   ├── sendemail-validate.sample
│   │   └── update.sample
│   ├── index
│   ├── info
│   │   └── exclude
│   ├── lfs
│   │   ├── cache
│   │   └── tmp
│   ├── logs
│   │   ├── HEAD
│   │   └── refs
│   ├── objects
│   │   ├── 01
│   │   ├── 02
│   │   ├── 05
│   │   ├── 09
│   │   ├── 0e
│   │   ├── 0f
│   │   ├── 13
│   │   ├── 14
│   │   ├── 15
│   │   ├── 17
│   │   ├── 18
│   │   ├── 1f
│   │   ├── 21
│   │   ├── 22
│   │   ├── 24
│   │   ├── 25
│   │   ├── 29
│   │   ├── 2e
│   │   ├── 32
│   │   ├── 33
│   │   ├── 34
│   │   ├── 36
│   │   ├── 3c
│   │   ├── 3d
│   │   ├── 3f
│   │   ├── 41
│   │   ├── 42
│   │   ├── 43
│   │   ├── 46
│   │   ├── 48
│   │   ├── 4a
│   │   ├── 4c
│   │   ├── 4d
│   │   ├── 5b
│   │   ├── 5d
│   │   ├── 5e
│   │   ├── 5f
│   │   ├── 60
│   │   ├── 63
│   │   ├── 66
│   │   ├── 67
│   │   ├── 69
│   │   ├── 6a
│   │   ├── 6f
│   │   ├── 75
│   │   ├── 78
│   │   ├── 79
│   │   ├── 7a
│   │   ├── 7c
│   │   ├── 7d
│   │   ├── 7e
│   │   ├── 7f
│   │   ├── 8b
│   │   ├── 8c
│   │   ├── 8d
│   │   ├── 92
│   │   ├── 94
│   │   ├── 96
│   │   ├── 98
│   │   ├── 99
│   │   ├── 9d
│   │   ├── a1
│   │   ├── a3
│   │   ├── a4
│   │   ├── a6
│   │   ├── a7
│   │   ├── a9
│   │   ├── ab
│   │   ├── ac
│   │   ├── ad
│   │   ├── ae
│   │   ├── b0
│   │   ├── ba
│   │   ├── be
│   │   ├── bf
│   │   ├── c2
│   │   ├── c5
│   │   ├── c6
│   │   ├── c7
│   │   ├── c8
│   │   ├── c9
│   │   ├── d2
│   │   ├── d3
│   │   ├── d5
│   │   ├── d6
│   │   ├── d7
│   │   ├── d9
│   │   ├── dc
│   │   ├── de
│   │   ├── e0
│   │   ├── e8
│   │   ├── ea
│   │   ├── ed
│   │   ├── f0
│   │   ├── f4
│   │   ├── f9
│   │   ├── info
│   │   └── pack
│   ├── packed-refs
│   └── refs
│       ├── heads
│       ├── remotes
│       └── tags
├── .github
│   └── workflows
│       └── ci.yml
├── .gitignore
├── README.md
├── client
│   ├── .eslintrc.cjs
│   ├── index.html
│   ├── package.json
│   ├── postcss.config.js
│   ├── src
│   │   ├── App.tsx
│   │   ├── index.css
│   │   ├── main.tsx
│   │   └── vite-env.d.ts
│   ├── tailwind.config.ts
│   ├── tsconfig.json
│   ├── tsconfig.node.json
│   └── vite.config.ts
├── data
│   └── .gitkeep
├── package-lock.json
├── package.json
├── permitpass_support_bundle.txt
├── server
│   ├── .eslintrc.cjs
│   ├── package.json
│   ├── src
│   │   ├── app.ts
│   │   ├── config
│   │   ├── db
│   │   ├── importer.ts
│   │   ├── index.ts
│   │   ├── lib
│   │   ├── routes
│   │   ├── storage.ts
│   │   └── utils
│   ├── test
│   │   ├── projects.test.ts
│   │   └── upload.test.ts
│   └── tsconfig.json
├── templates
│   └── .gitkeep
└── uploads
    └── .gitkeep

127 directories, 57 files

== ROOT FILES ==

--- package.json ---
{
  "name": "permitpass",
  "private": true,
  "version": "0.0.1",
  "workspaces": ["client", "server"],
  "scripts": {
    "dev": "concurrently \"npm run dev --prefix server\" \"npm run dev --prefix client\"",
    "dev:client": "npm run dev --prefix client",
    "dev:server": "npm run dev --prefix server",
    "test": "npm run test --prefix server",
    "lint": "npm run lint --prefix server && npm run lint --prefix client",
    "typecheck": "npm run typecheck --prefix server && npm run typecheck --prefix client",
    "build": "npm run build --prefix server && npm run build --prefix client",
    "import:data": "ts-node --esm server/src/importer.ts"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "ts-node": "^10.9.2"
  }
}

--- package-lock.json ---
{
  "name": "permitpass",
  "version": "0.0.1",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "permitpass",
      "version": "0.0.1",
      "workspaces": [
        "client",
        "server"
      ],
      "devDependencies": {
        "concurrently": "^8.2.2",
        "ts-node": "^10.9.2"
      }
    },
    "client": {
      "name": "permitpass-client",
      "version": "0.0.1",
      "dependencies": {
        "@tanstack/react-query": "^5.51.23",
        "react": "^18.3.1",
        "react-dom": "^18.3.1",
        "react-router-dom": "^6.27.0"
      },
      "devDependencies": {
        "@types/react": "^18.3.5",
        "@types/react-dom": "^18.3.0",
        "@typescript-eslint/eslint-plugin": "^7.17.0",
        "@typescript-eslint/parser": "^7.17.0",
        "@vitejs/plugin-react-swc": "^3.7.0",
        "autoprefixer": "^10.4.20",
        "eslint": "^9.9.0",
        "eslint-plugin-react": "^7.35.0",
        "eslint-plugin-react-hooks": "^5.1.0",
        "eslint-plugin-react-refresh": "^0.4.7",
        "postcss": "^8.4.41",
        "tailwindcss": "^3.4.10",
        "typescript": "^5.5.3",
        "vite": "^5.4.1"
      }
    },
    "node_modules/@alloc/quick-lru": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz",
      "integrity": "sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==",
      "dev": true,
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@babel/runtime": {
      "version": "7.28.4",
      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.28.4.tgz",
      "integrity": "sha512-Q/N6JNWvIvPnLDvjlE1OUBLPQHH6l3CltCEsHIujp45zQUSSh8K+gHnaEX45yAT1nyngnINhvWtzN+Nb9D8RAQ==",
      "dev": true,
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@cspotcode/source-map-support": {
      "version": "0.8.1",
      "resolved": "https://registry.npmjs.org/@cspotcode/source-map-support/-/source-map-support-0.8.1.tgz",
      "integrity": "sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==",
      "dev": true,
      "dependencies": {
        "@jridgewell/trace-mapping": "0.3.9"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@esbuild/aix-ppc64": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.10.tgz",
      "integrity": "sha512-0NFWnA+7l41irNuaSVlLfgNT12caWJVLzp5eAVhZ0z1qpxbockccEt3s+149rE64VUI3Ml2zt8Nv5JVc4QXTsw==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "aix"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-arm": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.10.tgz",
      "integrity": "sha512-dQAxF1dW1C3zpeCDc5KqIYuZ1tgAdRXNoZP7vkBIRtKZPYe2xVr/d3SkirklCHudW1B45tGiUlz2pUWDfbDD4w==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-arm64": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.10.tgz",
      "integrity": "sha512-LSQa7eDahypv/VO6WKohZGPSJDq5OVOo3UoFR1E4t4Gj1W7zEQMUhI+lo81H+DtB+kP+tDgBp+M4oNCwp6kffg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-x64": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.10.tgz",
      "integrity": "sha512-MiC9CWdPrfhibcXwr39p9ha1x0lZJ9KaVfvzA0Wxwz9ETX4v5CHfF09bx935nHlhi+MxhA63dKRRQLiVgSUtEg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/darwin-arm64": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.10.tgz",
      "integrity": "sha512-JC74bdXcQEpW9KkV326WpZZjLguSZ3DfS8wrrvPMHgQOIEIG/sPXEN/V8IssoJhbefLRcRqw6RQH2NnpdprtMA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/darwin-x64": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.10.tgz",
      "integrity": "sha512-tguWg1olF6DGqzws97pKZ8G2L7Ig1vjDmGTwcTuYHbuU6TTjJe5FXbgs5C1BBzHbJ2bo1m3WkQDbWO2PvamRcg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/freebsd-arm64": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.10.tgz",
      "integrity": "sha512-3ZioSQSg1HT2N05YxeJWYR+Libe3bREVSdWhEEgExWaDtyFbbXWb49QgPvFH8u03vUPX10JhJPcz7s9t9+boWg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/freebsd-x64": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.10.tgz",
      "integrity": "sha512-LLgJfHJk014Aa4anGDbh8bmI5Lk+QidDmGzuC2D+vP7mv/GeSN+H39zOf7pN5N8p059FcOfs2bVlrRr4SK9WxA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-arm": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.10.tgz",
      "integrity": "sha512-oR31GtBTFYCqEBALI9r6WxoU/ZofZl962pouZRTEYECvNF/dtXKku8YXcJkhgK/beU+zedXfIzHijSRapJY3vg==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-arm64": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.10.tgz",
      "integrity": "sha512-5luJWN6YKBsawd5f9i4+c+geYiVEw20FVW5x0v1kEMWNq8UctFjDiMATBxLvmmHA4bf7F6hTRaJgtghFr9iziQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-ia32": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.10.tgz",
      "integrity": "sha512-NrSCx2Kim3EnnWgS4Txn0QGt0Xipoumb6z6sUtl5bOEZIVKhzfyp/Lyw4C1DIYvzeW/5mWYPBFJU3a/8Yr75DQ==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-loong64": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.10.tgz",
      "integrity": "sha512-xoSphrd4AZda8+rUDDfD9J6FUMjrkTz8itpTITM4/xgerAZZcFW7Dv+sun7333IfKxGG8gAq+3NbfEMJfiY+Eg==",
      "cpu": [
        "loong64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-mips64el": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.10.tgz",
      "integrity": "sha512-ab6eiuCwoMmYDyTnyptoKkVS3k8fy/1Uvq7Dj5czXI6DF2GqD2ToInBI0SHOp5/X1BdZ26RKc5+qjQNGRBelRA==",
      "cpu": [
        "mips64el"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-ppc64": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.10.tgz",
      "integrity": "sha512-NLinzzOgZQsGpsTkEbdJTCanwA5/wozN9dSgEl12haXJBzMTpssebuXR42bthOF3z7zXFWH1AmvWunUCkBE4EA==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-riscv64": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.10.tgz",
      "integrity": "sha512-FE557XdZDrtX8NMIeA8LBJX3dC2M8VGXwfrQWU7LB5SLOajfJIxmSdyL/gU1m64Zs9CBKvm4UAuBp5aJ8OgnrA==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-s390x": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.10.tgz",
      "integrity": "sha512-3BBSbgzuB9ajLoVZk0mGu+EHlBwkusRmeNYdqmznmMc9zGASFjSsxgkNsqmXugpPk00gJ0JNKh/97nxmjctdew==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-x64": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.10.tgz",
      "integrity": "sha512-QSX81KhFoZGwenVyPoberggdW1nrQZSvfVDAIUXr3WqLRZGZqWk/P4T8p2SP+de2Sr5HPcvjhcJzEiulKgnxtA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/netbsd-arm64": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.10.tgz",
      "integrity": "sha512-AKQM3gfYfSW8XRk8DdMCzaLUFB15dTrZfnX8WXQoOUpUBQ+NaAFCP1kPS/ykbbGYz7rxn0WS48/81l9hFl3u4A==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/netbsd-x64": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.10.tgz",
      "integrity": "sha512-7RTytDPGU6fek/hWuN9qQpeGPBZFfB4zZgcz2VK2Z5VpdUxEI8JKYsg3JfO0n/Z1E/6l05n0unDCNc4HnhQGig==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openbsd-arm64": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.10.tgz",
      "integrity": "sha512-5Se0VM9Wtq797YFn+dLimf2Zx6McttsH2olUBsDml+lm0GOCRVebRWUvDtkY4BWYv/3NgzS8b/UM3jQNh5hYyw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openbsd-x64": {
      "version": "0.25.10",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.10.tgz",

== SERVER ==

--- server/package.json ---
{
  "name": "permitpass-server",
  "private": true,
  "version": "0.0.1",
  "type": "module",
  "scripts": {
    "dev": "tsx watch src/index.ts",
    "build": "tsc -p tsconfig.json",
    "start": "node dist/index.js",
    "lint": "eslint . --ext .ts",
    "typecheck": "tsc --noEmit",
    "test": "tsx test/upload.test.ts && tsx test/projects.test.ts"
  },
  "dependencies": {
    "cors": "^2.8.5",
    "dotenv": "^16.4.5",
    "express": "^4.19.2",
    "helmet": "^7.1.0",
    "morgan": "^1.10.0",
    "zod": "^3.23.8",
    "better-sqlite3": "^9.6.0",
    "csv-parse": "^5.5.6",
    "multer": "^1.4.5-lts.1"
  },
  "devDependencies": {
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/morgan": "^1.9.7",
    "@types/multer": "^1.4.11",
    "@types/node": "^22.5.3",
    "@types/supertest": "^2.0.16",
    "@typescript-eslint/eslint-plugin": "^7.17.0",
    "@typescript-eslint/parser": "^7.17.0",
    "eslint": "^9.9.0",
    "eslint-config-prettier": "^9.1.0",
    "supertest": "^6.3.4",
    "tsx": "^4.15.7",
    "typescript": "^5.5.3"
  }
}

--- server/tsconfig.json ---
{
  "compilerOptions": {
    "target": "ES2020",
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "dist",
    "rootDir": "src",
    "strict": true,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true,
    "resolveJsonModule": true,
    "sourceMap": true,
    "types": ["node"]
  },
  "include": ["src"],
  "exclude": ["node_modules", "dist"]
}

--- server/src/index.ts ---
import { createServer } from "http";
import process from "node:process";

import { appEnv } from "./config/env.js";
import { createApp } from "./app.js";
import { loadSnapshot } from "./storage.js";

const bootstrap = async () => {
  await loadSnapshot();

  const app = createApp();
  const server = createServer(app);

  server.listen(appEnv.port, () => {
    console.log(`PermitPass API listening on http://localhost:${appEnv.port}`);
  });
};

bootstrap().catch((error) => {
  console.error("Failed to start PermitPass API", error);
  process.exit(1);
});

== CLIENT ==

--- client/package.json ---
{
  "name": "permitpass-client",
  "private": true,
  "version": "0.0.1",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc && vite build",
    "preview": "vite preview",
    "lint": "eslint .",
    "typecheck": "tsc --noEmit"
  },
  "dependencies": {
    "@tanstack/react-query": "^5.51.23",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-router-dom": "^6.27.0"
  },
  "devDependencies": {
    "@types/react": "^18.3.5",
    "@types/react-dom": "^18.3.0",
    "@typescript-eslint/eslint-plugin": "^7.17.0",
    "@typescript-eslint/parser": "^7.17.0",
    "@vitejs/plugin-react-swc": "^3.7.0",
    "autoprefixer": "^10.4.20",
    "eslint": "^9.9.0",
    "eslint-plugin-react": "^7.35.0",
    "eslint-plugin-react-hooks": "^5.1.0",
    "eslint-plugin-react-refresh": "^0.4.7",
    "postcss": "^8.4.41",
    "tailwindcss": "^3.4.10",
    "typescript": "^5.5.3",
    "vite": "^5.4.1"
  }
}

--- client/tsconfig.json ---
{
  "compilerOptions": {
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": ["DOM", "DOM.Iterable", "ES2020"],
    "allowJs": false,
    "skipLibCheck": true,
    "esModuleInterop": false,
    "allowSyntheticDefaultImports": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "module": "ESNext",
    "moduleResolution": "Node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx"
  },
  "include": ["src"],
  "references": [{ "path": "./tsconfig.node.json" }]
}

--- client/vite.config.ts ---
import { defineConfig } from "vite";
import react from "@vitejs/plugin-react-swc";

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
  server: {
    port: 5173,
    proxy: {
      "/api": {
        target: "http://localhost:4000",
        changeOrigin: true
      }
    }
  }
});

--- client/src/main.tsx ---
import React from "react";
import ReactDOM from "react-dom/client";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { BrowserRouter } from "react-router-dom";
import App from "./App";
import "./index.css";

const queryClient = new QueryClient();

ReactDOM.createRoot(document.getElementById("root") as HTMLElement).render(
  <React.StrictMode>
    <QueryClientProvider client={queryClient}>
      <BrowserRouter>
        <App />
      </BrowserRouter>
    </QueryClientProvider>
  </React.StrictMode>
);

--- client/src/App.tsx ---
import type { ReactNode } from "react";
import { NavLink, Route, Routes } from "react-router-dom";
import { useQuery } from "@tanstack/react-query";

const navLinkStyles = ({ isActive }: { isActive: boolean }) =>
  [
    "rounded-lg px-3 py-2 text-sm font-medium transition",
    isActive
      ? "bg-white text-slate-900 shadow"
      : "text-slate-200 hover:bg-slate-800 hover:text-white"
  ].join(" ");

const shellClasses = "grid min-h-screen grid-cols-1 bg-slate-950 text-slate-100 lg:grid-cols-[260px_1fr]";

const Section = ({ title, children, description }: { title: string; description?: string; children: ReactNode }) => (
  <section className="space-y-3 rounded-xl border border-slate-800 bg-slate-900/60 p-6 shadow-inner shadow-slate-900">
    <header className="space-y-1">
      <h2 className="text-lg font-semibold text-white">{title}</h2>
      {description ? (
        <p className="text-sm text-slate-300">{description}</p>
      ) : null}
    </header>
    <div className="text-sm text-slate-200">{children}</div>
  </section>
);

const ReadyBadge = ({ status }: { status: "ready" | "missing" }) => (
  <span
    className={`inline-flex items-center gap-1 rounded-full px-3 py-1 text-xs font-semibold ${
      status === "ready"
        ? "bg-emerald-400/10 text-emerald-300"
        : "bg-amber-400/10 text-amber-300"
    }`}
  >
    <span className="h-2 w-2 rounded-full bg-current" />
    {status === "ready" ? "Ready" : "Missing"}
  </span>
);

const ProjectOverview = () => (
  <div className="space-y-6">
    <Section
      title="Latest project"
      description="We remember every detail once you send it—no retyping across projects."
    >
      <div className="flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between">
        <div className="space-y-1">
          <p className="text-xl font-semibold text-white">EV charger • Yarmouth</p>
          <p className="text-sm text-slate-300">12 Maple Street • Submitted 4 minutes ago</p>
        </div>
        <ReadyBadge status="missing" />
      </div>
      <dl className="mt-4 grid grid-cols-1 gap-4 text-sm sm:grid-cols-3">
        <div>
          <dt className="text-slate-400">Company profile</dt>
          <dd className="mt-1 font-medium text-white">Autofilled</dd>
        </div>
        <div>
          <dt className="text-slate-400">Checklist items</dt>
          <dd className="mt-1 font-medium text-white">2 missing • Wiring diagram &amp; panel photo</dd>
        </div>
        <div>
          <dt className="text-slate-400">Time to ready</dt>
          <dd className="mt-1 font-medium text-white">6 minutes</dd>
        </div>
      </dl>
    </Section>
    <Section title="Frictionless principles" description="PermitPass keeps crews focused on installs, not paperwork.">
      <ul className="space-y-2 text-slate-200">
        <li>• Ask once, remember forever—profiles auto-fill every town form.</li>
        <li>• Dynamic checklist stays focused: only show what a town actually needs.</li>
        <li>• Extract from quotes, photos, and emails so contractors never type twice.</li>
      </ul>
    </Section>
  </div>
);

const ChecklistPreview = () => {
  const requirements = [
    {
      title: "Town application (PDF)",
      detail: "Autofilled from contractor profile + project basics.",
      status: "ready" as const
    },
    {
      title: "Panel photo",
      detail: "Required-if load &gt; 60A. Auto-tagged when texted to your PermitPass number.",
      status: "missing" as const
    },
    {
      title: "Wiring diagram",
      detail: "Upload once; we reuse the latest stamped version for every Yarmouth EV job.",
      status: "ready" as const
    }
  ];

  return (
    <Section
      title="Dynamic checklist"
      description="Pick project + town and PermitPass pulls the exact list—no extra paperwork."
    >
      <ul className="space-y-4">
        {requirements.map((req) => (
          <li key={req.title} className="flex flex-col gap-2 rounded-lg border border-slate-800/80 bg-slate-900/60 p-4 sm:flex-row sm:items-center sm:justify-between">
            <div>
              <p className="text-sm font-semibold text-white">{req.title}</p>
              <p className="text-xs text-slate-300">{req.detail}</p>
            </div>
            <ReadyBadge status={req.status} />
          </li>
        ))}
      </ul>
    </Section>
  );
};

const StatusPage = () => {
  const { data, isLoading, isError } = useQuery<{ status: string; timestamp: string }>([
    "health"
  ], async () => {
    const response = await fetch("/api/health");
    if (!response.ok) {
      throw new Error("Failed to reach API");
    }
    return response.json();
  });

  return (
    <Section
      title="Service health"
      description="PermitPass API keeps status simple: Ready, Missing, or Needs attention."
    >
      {isLoading ? (
        <p className="text-slate-300">Checking API health…</p>
      ) : isError ? (
        <p className="text-rose-300">API offline. We alert the team automatically.</p>
      ) : (
        <div className="flex items-center gap-3">
          <ReadyBadge
            status={data && data.status.toLowerCase().includes("healthy") ? "ready" : "missing"}
          />
          <div>
            <p className="font-medium text-white">{data?.status}</p>
            <p className="text-xs text-slate-400">Updated {new Date(data!.timestamp).toLocaleString()}</p>
          </div>
        </div>
      )}
    </Section>
  );
};

const Shell = ({ children }: { children: ReactNode }) => (
  <div className={shellClasses}>
    <aside className="border-b border-r border-slate-800/80 bg-slate-900/70 p-6">
      <p className="text-sm font-semibold uppercase tracking-wide text-slate-400">PermitPass</p>
      <h1 className="mt-2 text-2xl font-bold text-white">Frictionless permitting</h1>
      <nav className="mt-8 flex flex-col gap-2">
        <NavLink to="/" className={navLinkStyles} end>
          Overview
        </NavLink>
        <NavLink to="/checklist" className={navLinkStyles}>
          Checklist
        </NavLink>
        <NavLink to="/status" className={navLinkStyles}>
          Status
        </NavLink>
      </nav>
      <p className="mt-8 text-xs text-slate-400">
        Built to stay ahead of town changes, compute fees correctly, and share a clear Ready / Missing X snapshot.
      </p>
    </aside>
    <main className="overflow-y-auto bg-slate-950 p-6 lg:p-10">
      <div className="mx-auto flex w-full max-w-4xl flex-col gap-6">{children}</div>
    </main>
  </div>
);

function App() {
  return (
    <Shell>
      <Routes>
        <Route index element={<ProjectOverview />} />
        <Route path="/checklist" element={<ChecklistPreview />} />
        <Route path="/status" element={<StatusPage />} />
      </Routes>
    </Shell>
  );
}

export default App;

--- client/src/index.css ---
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  color-scheme: dark;
}

body {
  min-height: 100vh;
  font-family: "Inter", system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", sans-serif;
}

== GITHUB ACTIONS ==

--- .github/workflows/ci.yml ---
name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      # ---------- Root (only if present) ----------
      - name: Install root deps (if any)
        if: ${{ hashFiles('package.json') != '' }}
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm i --legacy-peer-deps
          fi

      # ---------- Server ----------
      - name: Install server deps
        working-directory: server
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm i --legacy-peer-deps
          fi

      - name: Lint server (if script exists)
        working-directory: server
        run: npm run lint --if-present

      - name: Build server (if script exists)
        working-directory: server
        run: npm run build --if-present

      - name: Test server (if script exists)
        working-directory: server
        run: npm test --if-present

      # ---------- Client ----------
      - name: Install client deps
        working-directory: client
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm i --legacy-peer-deps
          fi

      - name: Lint client (if script exists)
        working-directory: client
        run: npm run lint --if-present

      - name: Build client (if script exists)
        working-directory: client
        run: npm run build --if-present

      - name: Test client (if script exists)
        working-directory: client
        run: npm test --if-present

== PACKAGE-LOCK LOCATIONS ==

== NPM SCRIPTS SUMMARY ==

--- package.json scripts ---

--- server/package.json scripts ---

--- client/package.json scripts ---

== DONE. Paste the contents of permitpass_support_bundle.txt in chat ==
